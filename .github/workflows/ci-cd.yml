name: CI/CD Pipeline 🚀

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout do código
        uses: actions/checkout@v3

      - name: 🔨 Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: ⚡ Cache das dependências
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: 📦 Instalar dependências
        run: npm install

      - name: 🧪 Executar testes
        run: npm test

  docker-build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout do código
        uses: actions/checkout@v3

      - name: 🔐 Login no Docker Hub
        run: |
          echo "${{ secrets.DOCKER_TOKEN_SECRET }}" | while IFS= read -r line; do
            if [ -z "$username" ]; then
              username="$line"
            else
              token="$line"
            fi
          done
          echo "$token" | docker login -u "$username" --password-stdin

      - name: 🏗️ Build da imagem Docker
        run: |
          docker build -t usuario/password-manager:${{ github.sha }} .
          docker tag usuario/password-manager:${{ github.sha }} usuario/password-manager:latest
          
      - name: 📤 Push da imagem para o Docker Hub
        run: |
          docker push usuario/password-manager:${{ github.sha }}
          docker push usuario/password-manager:latest
