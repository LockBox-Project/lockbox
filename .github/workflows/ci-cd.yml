name: CI/CD Pipeline 🚀

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: 👅 Checkout do código
        uses: actions/checkout@v3

      - name: 🔨 Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: ⚡ Cache das dependências
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: 👆 Instalar dependências (Backend)
        working-directory: backend
        run: |
          if [ -f package.json ]; then
            npm install
          else
            echo "Erro: package.json não encontrado em backend!"
            exit 1
          fi

      - name: 👆 Instalar dependências (Frontend)
        working-directory: frontend
        run: |
          if [ -f package.json ]; then
            npm install
          else
            echo "Erro: package.json não encontrado em frontend!"
            exit 1
          fi

      - name: 🧙‍♂️ Executar testes (Backend e Frontend)
        run: |
          if [ -d backend ] && [ -f backend/package.json ]; then
            echo "🔍 Rodando testes no Backend..."
            cd backend
            npm test
            cd ..
          else
            echo "⚠️ Backend não encontrado ou sem package.json"
          fi

          if [ -d frontend ] && [ -f frontend/package.json ]; then
            echo "🔍 Rodando testes no Frontend..."
            cd frontend
            npm test
            cd ..
          else
            echo "⚠️ Frontend não encontrado ou sem package.json"
          fi

  docker-build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: 👅 Checkout do código
        uses: actions/checkout@v3

      - name: 🔐 Login no Docker Hub
        run: |
          echo "${{ secrets.DOCKER_TOKEN_SECRET }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: 🏰 Build da imagem Docker
        run: |
          docker build -t joaomsgomes/lockbox:${{ github.sha }} -f backend/Dockerfile backend
          docker tag joaomsgomes/lockbox:${{ github.sha }} joaomsgomes/lockbox:latest
          
      - name: 📤 Push da imagem para o Docker Hub
        run: |
          docker push joaomsgomes/lockbox:${{ github.sha }}
          docker push joaomsgomes/lockbox:latest